{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/categories-table/categories-table.component.css","webpack:///./src/app/components/categories-table/categories-table.component.html","webpack:///./src/app/components/categories-table/categories-table.component.ts","webpack:///./src/app/components/product-details/product-details.component.css","webpack:///./src/app/components/product-details/product-details.component.html","webpack:///./src/app/components/product-details/product-details.component.ts","webpack:///./src/app/components/products-table/products-table.component.css","webpack:///./src/app/components/products-table/products-table.component.html","webpack:///./src/app/components/products-table/products-table.component.ts","webpack:///./src/app/services/categories.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\r\\n  margin-top: 20px;\\r\\n}\\r\\nh2 {\\r\\n  display: inline-block;\\r\\n  margin-left: 5px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'zadanie';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\n// Components\nimport { AppComponent } from './app.component';\n\nimport { CategoriesTableComponent } from './components/categories-table/categories-table.component';\nimport { ProductsTableComponent } from './components/products-table/products-table.component';\nimport { ProductDetailsComponent } from './components/product-details/product-details.component';\n\n// Services\nimport { CategoriesService } from './services/categories.service';\n\n// Routes\nconst appRoutes: Routes = [\n  {path: '', component: CategoriesTableComponent},\n  {path: 'category/:id', component: ProductsTableComponent},\n  {path: 'product/:id', component: ProductDetailsComponent},\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoriesTableComponent,\n    ProductsTableComponent,\n    ProductDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes),\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [\n    CategoriesService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"button {\\r\\n    cursor: pointer;\\r\\n}\\r\\ninput {\\r\\n  margin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6\\\">\\r\\n        <h2>Kategorie</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <ng-container *ngIf='isEditMode'>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Nazwa kategorii\\\" #newCategory (keyup.enter)=\\\"saveNewCategory(newCategory.value)\\\">\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"saveNewCategory(newCategory.value)\\\">Zapisz</button>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\" *ngIf=!isEditMode>\\r\\n        <button class=\\\"btn btn-success btn-block\\\" (click)=\\\"toggleEditMode()\\\"> <i class=\\\"fa fa-plus\\\"></i>\\r\\n          Dodaj\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\" *ngIf=isEditMode>\\r\\n        <button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"toggleEditMode()\\\">\\r\\n          Anuluj\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<table *ngIf=\\\"categories?.length > 0; else noCategories\\\" class=\\\"table table-striped\\\">\\r\\n    <thead class=\\\"thead-inverse\\\">\\r\\n        <tr>\\r\\n            <th>Id</th>\\r\\n            <th>Nazwa</th>\\r\\n            <th>Produkty</th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let category of categories\\\">\\r\\n            <td>{{category.category_id}}</td>\\r\\n            <td>{{category.category_name}}</td>\\r\\n            <td><a [routerLink]=\\\"['/category/'+category.category_id]\\\" href=\\\"\\\" class=\\\"btn btn-secondary btn-sm\\\"><i class=\\\"fa fa-arrow-circle-o-right\\\"></i> Produkty</a></td>\\r\\n            <td><button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteCategory(category.category_id)\\\">Usuń kategorię</button></td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #noCategories>\\r\\n    <hr>\\r\\n    <h5>Brak kategorii</h5>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CategoriesService } from '../../services/categories.service';\r\nimport { Category } from '../../models/Category';\r\n\r\n@Component({\r\n  selector: 'app-categories-table',\r\n  templateUrl: './categories-table.component.html',\r\n  styleUrls: ['./categories-table.component.css']\r\n})\r\nexport class CategoriesTableComponent implements OnInit {\r\n\r\n  @ViewChild('newCategory') newCategoryElement: ElementRef;\r\n\r\n  categories: Category[];\r\n  isEditMode: boolean = false;\r\n\r\n  constructor(private categoriesService: CategoriesService) { }\r\n\r\n  ngOnInit() {\r\n    this.categoriesService.getCategories().subscribe((data: Category[]) => {\r\n    this.categories = data;\r\n    });\r\n  }\r\n\r\n  toggleEditMode() {\r\n    this.isEditMode = !this.isEditMode;\r\n\r\n    if (this.isEditMode) {\r\n      setTimeout(() => {\r\n        this.newCategoryElement.nativeElement.focus();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  saveNewCategory(categoryName) {\r\n    let lastElementId;\r\n\r\n    if (this.categories.length > 0) {\r\n      lastElementId = this.categories[this.categories.length - 1].category_id;\r\n    } else {\r\n      lastElementId = 0;\r\n    }\r\n\r\n    let elementToAdd = {\r\n      category_id: lastElementId + 1,\r\n      category_name: categoryName\r\n    };\r\n\r\n    this.categories.push(elementToAdd);\r\n    this.toggleEditMode();\r\n  }\r\n\r\n  deleteCategory(categoryId) {\r\n    this.categories = this.categories.filter(category => {\r\n      if (category.category_id === categoryId) {\r\n        return false;\r\n      } else {\r\n        return true;\r\n      }\r\n    })\r\n  }\r\n}\r\n","module.exports = \"h2 {\\r\\n    display: inline-block;\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\n.card-title {\\r\\n    padding: 0.75rem 1.25rem;\\r\\n}\\r\\n\\r\\ninput {\\r\\n  margin-right: 10px;\\r\\n  }\\r\\n\\r\\ntextarea {\\r\\n  margin-top: 10px;\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n        <a [routerLink]=\\\"['/category/'+categoryId]\\\" href=\\\"\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Powrót</a>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n        <h2>Szczegóły Produktu</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6\\\"></div>\\r\\n    <div class=\\\"col-md-2\\\"></div>\\r\\n</div>\\r\\n<table *ngIf=\\\"parameters?.length > 0; else noParameters\\\" class=\\\"table table-striped\\\">\\r\\n    <thead class=\\\"thead-inverse\\\">\\r\\n        <tr>\\r\\n            <th>Id Parametru</th>\\r\\n            <th>Nazwa</th>\\r\\n            <th>Wartość</th>\\r\\n            <th>\\r\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"toggleParameterEditMode()\\\" *ngIf=\\\"!isParameterEditMode\\\">Dodaj parametr</button>\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"toggleParameterEditMode()\\\" *ngIf=\\\"isParameterEditMode\\\">Anuluj</button>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let parameter of parameters\\\">\\r\\n            <td>{{parameter.parameter_id}}</td>\\r\\n            <td>{{parameter.parameter_name}}</td>\\r\\n            <td>{{parameter.parameter_value}}</td>\\r\\n            <td>\\r\\n                <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteParameter(parameter.parameter_id)\\\">Usuń</button>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #noParameters>\\r\\n    <div class=\\\"d-flex justify-content-between\\\">\\r\\n        <h5>Brak parametrów</h5>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"toggleParameterEditMode()\\\" *ngIf=\\\"!isParameterEditMode\\\">Dodaj parametr</button>\\r\\n        <button class=\\\"btn btn-danger\\\" (click)=\\\"toggleParameterEditMode()\\\" *ngIf=\\\"isParameterEditMode\\\">Anuluj</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-container *ngIf=\\\"isParameterEditMode\\\">\\r\\n    <div>\\r\\n        <input type=\\\"text\\\" placeholder=\\\"Nazwa parametru\\\" #newParameterName>\\r\\n        <input type=\\\"text\\\" placeholder=\\\"Wartość\\\" #newParameterValue>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"saveNewParameter(newParameterName.value, newParameterValue.value)\\\">Zapisz</button>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\\r\\n<div class=\\\"card mt-5\\\">\\r\\n    <div class=\\\"card-body\\\" *ngIf=\\\"comments?.length > 0; else noComments\\\">\\r\\n        <div class=\\\"card-title d-flex justify-content-between\\\">\\r\\n            <h3>Komentarze</h3>\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"toggleCommentEditMode()\\\" *ngIf=\\\"!isCommentEditMode\\\">Dodaj komentarz</button>\\r\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"toggleCommentEditMode()\\\" *ngIf=\\\"isCommentEditMode\\\">Anuluj</button>\\r\\n        </div>\\r\\n\\r\\n        <ul class=\\\"list-group list-group-flush\\\" *ngFor=\\\"let comment of comments\\\">\\r\\n            <li class=\\\"list-group-item d-flex justify-content-between\\\">\\r\\n                {{ comment.comment_content }}\\r\\n                <button class=\\\"btn btn-danger\\\" (click)=\\\"deleteComment(comment.comment_id)\\\">Usuń komentarz</button>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n</div>\\r\\n<ng-template #noComments>\\r\\n    <div class=\\\"card-title d-flex justify-content-between\\\">\\r\\n        <h5>Brak komentarzy</h5>\\r\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"toggleCommentEditMode()\\\">Dodaj komentarz</button>\\r\\n    </div>\\r\\n</ng-template>\\r\\n<ng-container *ngIf=\\\"isCommentEditMode\\\">\\r\\n    <div>\\r\\n        <textarea class=\\\"form-control\\\" id=\\\"exampleFormControlTextarea1\\\" rows=\\\"3\\\" placeholder=\\\"Treść komentarza\\\" #newComment (keyup.enter)=\\\"saveNewComment(newComment.value)\\\"></textarea>\\r\\n        <button class=\\\"btn btn-success col-md-12\\\" (click)=\\\"saveNewComment(newComment.value)\\\">Zapisz</button>\\r\\n    </div>\\r\\n</ng-container>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CategoriesService } from '../../services/categories.service';\r\nimport { Parameter } from '../../models/Parameter';\r\nimport { Comment } from '../../models/Comment';\r\nimport { Product } from '../../models/Product';\r\n\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-product-details',\r\n  templateUrl: './product-details.component.html',\r\n  styleUrls: ['./product-details.component.css']\r\n})\r\nexport class ProductDetailsComponent implements OnInit {\r\n\r\n  @ViewChild('newComment') newCommentElement: ElementRef;\r\n  @ViewChild('newParameterName') newParameterNameElement: ElementRef;\r\n  @ViewChild('newParameterValue') newParameterValueElement: ElementRef;\r\n\r\n  parameters: Parameter[];\r\n  comments: Comment[];\r\n  productId: number;\r\n  categoryId: number;\r\n\r\n  isCommentEditMode: boolean = false;\r\n  isParameterEditMode: boolean = false;\r\n\r\n  constructor(private categoriesService: CategoriesService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.productId = parseInt(params.id, 0);\r\n    });\r\n\r\n    this.categoriesService.getProducts().subscribe((data: Product[]) => {\r\n      this.categoryId = data.filter(product => product.product_id === this.productId)[0].category_id;\r\n    });\r\n\r\n    this.categoriesService.getParameters().subscribe((data: Parameter[]) => {\r\n      this.parameters = data.filter(parameter => parameter.product_id === this.productId);\r\n    });\r\n\r\n    this.categoriesService.getComments().subscribe((data: Comment[]) => {\r\n      this.comments = data.filter(comment => comment.product_id === this.productId);\r\n    });\r\n\r\n  }\r\n\r\n  toggleCommentEditMode() {\r\n    this.isCommentEditMode = !this.isCommentEditMode;\r\n\r\n    if (this.isCommentEditMode) {\r\n      setTimeout(() => {\r\n        this.newCommentElement.nativeElement.focus();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  toggleParameterEditMode() {\r\n    this.isParameterEditMode = !this.isParameterEditMode;\r\n\r\n    if (this.isParameterEditMode) {\r\n      setTimeout(() => {\r\n        this.newParameterNameElement.nativeElement.focus();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  saveNewComment(newComment) {\r\n    let lastElementId;\r\n\r\n    if (this.comments.length > 0) {\r\n      lastElementId = this.comments[this.comments.length - 1].comment_id;\r\n    } else {\r\n      lastElementId = 0;\r\n    }\r\n\r\n    let elementToAdd = {\r\n      product_id: this.productId,\r\n      comment_id: lastElementId + 1,\r\n      comment_content: newComment\r\n    };\r\n\r\n    this.comments.push(elementToAdd);\r\n    this.toggleCommentEditMode();\r\n  }\r\n\r\n  saveNewParameter(newParameterName, newParameterValue) {\r\n    let lastElementId;\r\n\r\n    if (this.parameters.length > 0) {\r\n      lastElementId = this.parameters[this.parameters.length - 1].parameter_id;\r\n    } else {\r\n      lastElementId = 0;\r\n    }\r\n\r\n    let elementToAdd = {\r\n      product_id: this.productId,\r\n      parameter_id: lastElementId + 1,\r\n      parameter_name: newParameterName,\r\n      parameter_value: newParameterValue\r\n    };\r\n\r\n    this.parameters.push(elementToAdd);\r\n    this.toggleParameterEditMode();\r\n  }\r\n\r\n  deleteComment(commentId) {\r\n    this.comments = this.comments.filter(comment => {\r\n      if (comment.comment_id === commentId)\r\n         return false;\r\n      else\r\n         return true;\r\n    });\r\n  }\r\n\r\n  deleteParameter(parameterId) {\r\n    this.parameters = this.parameters.filter(parameter => {\r\n      if (parameter.parameter_id === parameterId)\r\n        return false;\r\n      else\r\n      return true;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"h2 {\\r\\n    display: inline-block;\\r\\n    margin-left: 5px;\\r\\n}\\r\\n\\r\\n.btn,\\r\\nbutton {\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\ninput {\\r\\nmargin-right: 10px;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-1\\\">\\r\\n        <a [routerLink]=\\\"['']\\\" href=\\\"\\\" class=\\\"btn btn-secondary\\\"><i class=\\\"fa fa-arrow-circle-o-left\\\"></i> Powrót</a>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-5\\\">\\r\\n        <h2> Produkty</h2>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-4\\\">\\r\\n      <ng-container *ngIf='isEditMode'>\\r\\n        <div>\\r\\n            <input type=\\\"text\\\" placeholder=\\\"Nazwa produktu\\\" #newProduct (keyup.enter)=\\\"saveNewProduct(newProduct.value)\\\">\\r\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"saveNewProduct(newProduct.value)\\\">Zapisz</button>\\r\\n        </div>\\r\\n      </ng-container>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\" *ngIf=!isEditMode>\\r\\n        <button class=\\\"btn btn-success btn-block\\\" (click)=\\\"toggleEditMode()\\\"> <i class=\\\"fa fa-plus\\\"></i>\\r\\n            Dodaj\\r\\n        </button>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2\\\" *ngIf=isEditMode>\\r\\n        <button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"toggleEditMode()\\\">\\r\\n            Anuluj\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n<table *ngIf=\\\"products?.length > 0; else noProducts\\\" class=\\\"table table-striped\\\">\\r\\n    <thead class=\\\"thead-inverse\\\">\\r\\n        <tr>\\r\\n            <th>Id Produktu</th>\\r\\n            <th>Nazwa</th>\\r\\n            <th>Status</th>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n            <th></th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr *ngFor=\\\"let product of products\\\">\\r\\n            <td>{{product.product_id}}</td>\\r\\n            <td>{{product.product_name}}</td>\\r\\n            <td>{{ product.product_status ? '1' : '0'}}</td>\\r\\n            <td>\\r\\n                <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"changeProductStatus(product.product_id)\\\">\\r\\n                <i class=\\\"fa fa-arrow-circle-o-right\\\"></i>\\r\\n                Zmień status\\r\\n                </button>\\r\\n            </td>\\r\\n            <td><button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"deleteProduct(product.product_id)\\\">Usuń produkt</button></td>\\r\\n            <td><a [routerLink]=\\\"['/product/'+product.product_id]\\\" href=\\\"\\\" class=\\\"btn btn-secondary btn-sm\\\"><i class=\\\"fa fa-arrow-circle-o-right\\\"></i> Szczegóły</a></td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\\r\\n\\r\\n<ng-template #noProducts>\\r\\n    <hr>\\r\\n    <h5>Brak produktów</h5>\\r\\n</ng-template>\\r\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { CategoriesService } from '../../services/categories.service';\r\nimport { Product } from '../../models/Product';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-products-table',\r\n  templateUrl: './products-table.component.html',\r\n  styleUrls: ['./products-table.component.css']\r\n})\r\nexport class ProductsTableComponent implements OnInit {\r\n\r\n  @ViewChild('newProduct') newProductElement: ElementRef;\r\n\r\n  products: Product[];\r\n  categoryId: number;\r\n  isEditMode: boolean = false;\r\n\r\n  constructor(private categoriesService: CategoriesService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.categoryId = parseInt(params.id, 0);\r\n    });\r\n\r\n    this.categoriesService.getProducts().subscribe((data: Product[]) => {\r\n      this.products = data.filter(product => product.category_id === this.categoryId);\r\n      });\r\n  }\r\n\r\n  changeProductStatus(productId) {\r\n    for (let i in this.products) {\r\n      var currentProduct = this.products[i];\r\n\r\n      if (currentProduct.product_id === productId) {\r\n        currentProduct.product_status = !currentProduct.product_status;\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleEditMode() {\r\n    this.isEditMode = !this.isEditMode;\r\n\r\n    if (this.isEditMode) {\r\n      setTimeout(() => {\r\n        this.newProductElement.nativeElement.focus();\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  saveNewProduct(productName) {\r\n    var lastElementId;\r\n\r\n    if (this.products.length > 0) {\r\n      lastElementId = this.products[this.products.length - 1].product_id;\r\n    } else {\r\n      lastElementId = 0;\r\n    }\r\n\r\n    let elementToAdd = {\r\n      category_id: this.categoryId,\r\n      product_id: lastElementId + 1,\r\n      product_name: productName,\r\n      product_status: false\r\n    }\r\n\r\n    this.products.push(elementToAdd);\r\n    this.toggleEditMode();\r\n  }\r\n\r\n  deleteProduct(productId) {\r\n    this.products = this.products.filter(product => {\r\n      if (product.product_id === productId) return false;\r\n      else return true;\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n// Models\nimport { Category } from '../models/Category';\nimport { Product } from '../models/Product';\nimport { Parameter } from '../models/Parameter';\nimport { Comment } from '../models/Comment';\n\nimport { map, filter, catchError, mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriesService {\n\n  constructor(private http: HttpClient) {}\n\n  public getCategories() {\n    return this.http.get<Category[]>('../../assets/categories.json');\n  }\n  public getProducts() {\n    return this.http.get<Product[]>('../../assets/products.json');\n  }\n  public getParameters() {\n    return this.http.get<Parameter[]>('../../assets/parameters.json');\n  }\n  public getComments() {\n    return this.http.get<Comment[]>('../../assets/comments.json');\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}